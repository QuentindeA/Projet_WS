{"version":3,"sources":["Search/Search.js","Disease/Disease.js","Virus/Virus.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","React","Component","Disease","diseaseName","match","params","this","Virus","virusName","App","path","component","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAkBeA,G,wDAdX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,qDAQd,OACI,2B,GAXSC,IAAMC,YCgBZC,E,kDAdX,WAAYJ,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTI,YAAc,EAAKL,MAAMM,MAAMC,OAAOF,aAH5B,E,qDAQd,OACI,6BAAKG,KAAKP,MAAMI,kB,GAXNF,aCoBPM,E,kDAlBX,WAAYT,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTS,UAAY,EAAKV,MAAMM,MAAMC,OAAOG,WAH1B,E,kGAYd,OACA,6BAAKF,KAAKP,MAAMS,gB,GAfJR,IAAMC,WCiCXQ,E,uKAfX,OACE,cAAC,IAAD,UACD,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAYd,EAASe,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAYJ,EAAQK,OAAK,IACjD,cAAC,IAAD,CAAOF,KAAK,wBAAwBC,UAAYT,EAAUU,OAAK,IAEvE,cAAC,IAAD,CAAUC,GAAG,e,GAZAZ,aCJHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0cfaf0b6.chunk.js","sourcesContent":["import React from 'react';\n\nclass Search extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    render () {\n        return (\n            <h1></h1>\n        );\n    }\n}\n\nexport default Search;","import React,{Component} from 'react';\n\nclass Disease extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            diseaseName : this.props.match.params.diseaseName,\n        }\n    }\n\n    render(){\n        return(\n            <h1>{this.state.diseaseName}</h1>\n        );\n    }\n}\n\nexport default Disease;","import React from 'react';\n\nclass Virus extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            virusName : this.props.match.params.virusName,\n        }\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render(){\n        return (\n        <h1>{this.state.virusName}</h1>\n        );\n    }\n}\n\nexport default Virus;","import React, { Component } from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tRedirect,\n\tSwitch\n} \nfrom 'react-router-dom';\n\n\nimport './App.css';\nimport Search from './Search/Search';\nimport Disease from './Disease/Disease';\nimport Virus from './Virus/Virus';\n\n\nclass App extends Component {\n\n\n  render(){\n    return (\n      <Router>\n\t\t\t\t <Switch>\n\t\t\t\t\t{/* Front Pages */}\n\t\t\t\t\t<Route path=\"/\" component={ Search } exact />\n\t\t\t\t\t<Route path=\"/virus/:virusName\" component={ Virus } exact />\n          \t\t\t<Route path=\"/disease/:diseaseName\" component={ Disease } exact />\n\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t </Switch>\n\t</Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}