{"version":3,"sources":["requests/Requests.js","logo2.svg","Search/Search.js","Disease/Disease.js","Virus/Virus.js","App.js","reportWebVitals.js","index.js"],"names":["userEntry","onResultsFound","a","encodedQuery","encodeURIComponent","fetch","then","res","json","result","results","bindings","error","console","log","err","Search","fetchData","valueToSearch","setState","loading","fetchSearchResultsFromMesh","handleResults","queryResponded","state","query","searchResults","handleInputChange","search","value","searching","handleKeyDown","event","key","blur","handleCheckboxDisease","checked","diseaseChecked","handleCheckboxVirus","virusChecked","handleTitleClick","handleOptionClick","showOptions","typing","this","resultsToPrint","resultsSuggestions","length","searchResultsFiltered","sort","b","nameA","label","toLowerCase","nameB","recherche","indexA","indexOf","indexB","map","name","comment","className","charAt","toUpperCase","substring","href","Fragment","slice","nameEN","split","empty","style","overflow","maxHeight","onClick","src","logo","alt","type","id","placeholder","autoComplete","list","ref","input","onKeyDown","onChange","onFocus","handleTyping","onBlur","textAlign","React","Component","Disease","props","diseaseName","match","params","Virus","virusName","App","path","component","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8WAEO,WAA0CA,EAAWC,GAArD,eAAAC,EAAA,sDACN,IACkB,4CAEhB,6DAuBGC,EAAeC,mBArBlB,+yBAiBAJ,EAjBA,2DAsBDK,MA1BiB,4CA0BEF,EAxBlB,8DAyBCG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACA,SAACG,GACAR,EAAeQ,EAAOC,QAAQC,SAAUX,MAEzC,SAACY,GACAC,QAAQC,IAAI,WAAYF,MAG1B,MAAOG,GACRF,QAAQC,IAAI,sBAAuBC,GAvC9B,4C,gCCFQ,MAA0B,kCCkT1BC,E,kDA5Sd,aAAe,IAAD,8BACb,gBAaDC,UAAY,SAACC,GACZ,EAAKC,SAAS,CAAEC,SAAS,IFnBpB,SAAP,6BEoBEC,CAA2BH,EAAe,EAAKI,gBAhBlC,EA6BdA,cAAgB,SAACZ,EAASa,GACrBA,IAAmB,EAAKC,MAAMC,QACjC,EAAKN,SAAS,CAAEC,SAAS,IAEzB,EAAKD,SAAS,CAAEO,cAAehB,MAjCnB,EA2CdiB,kBAAoB,WACnB,EAAKR,SAAS,CAAEM,MAAO,EAAKG,OAAOC,MAAOH,cAAe,KAC/B,KAAtB,EAAKE,OAAOC,MACf,EAAKV,SAAS,CAAEW,WAAW,IAE3B,EAAKb,UAAU,EAAKW,OAAOC,QAhDf,EAmDdE,cAAgB,SAACC,GACE,UAAdA,EAAMC,KAAiC,iBAAdD,EAAMC,MAClC,EAAKd,SAAS,CAAEW,WAAW,IAC3B,EAAKF,OAAOM,SAtDA,EA8DdC,sBAAwB,WACvB,IAAIC,GAAW,EAAKZ,MAAMa,eAC1B,EAAKlB,SAAS,CAAEkB,eAAgBD,KAhEnB,EAmEdE,oBAAsB,WACrB,IAAIF,GAAW,EAAKZ,MAAMe,aAC1B,EAAKpB,SAAS,CAAEoB,aAAcH,KArEjB,EAwEdI,iBAAmB,WAClB,EAAKrB,SAAS,CAAEW,WAAW,KAzEd,EA4EdW,kBAAoB,WACnB,EAAKtB,SAAS,CAAEuB,aAAc,EAAKlB,MAAMkB,cACzC7B,QAAQC,IAAI,EAAKU,MAAMkB,cA5EvB,EAAKlB,MAAQ,CACZE,cAAe,GACfD,MAAO,GACPK,WAAW,EACXa,QAAQ,EACRN,gBAAgB,EAChBE,cAAc,EACdG,aAAa,EACbtB,SAAS,GAVG,E,yDA0DDuB,GACZC,KAAKzB,SAAS,CAAEwB,a,+BAsBP,IACLE,EACAC,EAFI,OAGR,GAAIF,KAAKpB,MAAME,cAAcqB,OAAS,EAAG,CACxC,IAAIC,EAAwBJ,KAAKpB,MAAME,cAAcuB,MACpD,SAAC/C,EAAGgD,GACH,IAAIC,EAAQjD,EAAEkD,MAAMvB,MAAMwB,cACtBC,EAAQJ,EAAEE,MAAMvB,MAAMwB,cACtBE,EAAY,EAAK/B,MAAMC,MAAM4B,cAC7BG,EAASL,EAAMM,QAAQF,GACvBG,EAASJ,EAAMG,QAAQF,GAC3B,OAAIC,EAASE,GAAgB,EACzBF,EAASE,EAAe,EACxBF,IAAWE,EAAe,OAA9B,KAGFb,EAAiBG,EAAsBW,KAAI,SAAClD,GAC3C,IAAImD,EAAOnD,EAAO2C,MAAMvB,MACpBgC,EAAUpD,EAAOoD,QAAQhC,MAE7B,OAAI+B,IAAS,EAAKpC,MAAMJ,QAEtB,qBAAI0C,UAAU,UAAd,UACC,6BAAKF,EAAKG,OAAO,GAAGC,gBACpB,6BAAKJ,IACL,4BACEC,EAAQd,QAPO,IAQbc,EAAQI,UAAU,EARL,KASb,MACAJ,IAEJ,mBAAGK,KAAM,YAAcN,EAAvB,SACC,wDAV2BA,GAexB,cAAC,IAAMO,SAAP,OAEJvB,KAAKpB,MAAMmB,QAA+B,KAArBC,KAAKpB,MAAMC,QACnCqB,EAAqBE,EACnBoB,MAAM,EAAG,IACTT,KAAI,SAAClD,GACL,GAAIA,EAAO2C,MAAO,CACjB,IAAIiB,EAAS5D,EAAO2C,MAAMvB,MAAMwB,cAC5BE,EAAY,EAAK/B,MAAMC,MAAM4B,cAGjC,OAAe,IAFHgB,EAAOZ,QAAQF,IAGfc,EAAOC,MAAM,EAAK9C,MAAMC,MAAO,GAEzC,wBAGCI,MAAOwC,GADFA,IAYN,wBAGCxC,MAAOwC,GADFA,YAQN,CAENxB,EADiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjBc,KAAI,SAACY,GAChC,OAAO,oBAAIT,UAAU,WAAeS,MAGtC,OACC,eAAC,IAAMJ,SAAP,WACC,qBACCL,UAAU,qBACVU,MACC5B,KAAKpB,MAAMM,UACR,CAAE2C,SAAU,UACZ,CAAEC,UAAW,QAASD,SAAU,UALrC,SAQC,sBACCX,UACClB,KAAKpB,MAAMM,UACR,uBACA,gBAJL,UAOC,qBACC6C,QAAS/B,KAAKJ,iBACdoC,IAAKC,EACLf,UAAU,cACVgB,IAAI,SAEL,sBACChB,UACClB,KAAKpB,MAAMM,UACR,+BACA,wBAEJ6C,QAAS/B,KAAKJ,iBANf,UAQC,qBAAIsB,UAAU,eAAd,iBACK,uBADL,UAGC,uBAHD,eAKA,uDAGD,sBACCA,UACClB,KAAKpB,MAAMM,UACR,sCACA,+BAJL,UAOC,uBACCgC,UAAU,cACViB,KAAK,OACLnB,KAAK,SACLoB,GAAG,SACHnD,MAAOe,KAAKpB,MAAMK,MAClBoD,YAAY,0CACZC,aAAa,MACbC,KAAK,qBACLC,IAAK,SAACC,GAAD,OAAY,EAAKzD,OAASyD,GAC/BC,UAAW1C,KAAKb,cAChBwD,SAAU3C,KAAKjB,kBACf6D,QAAS,kBAAM,EAAKC,cAAa,IACjCC,OAAQ,kBAAM,EAAKD,cAAa,MAEhC7C,KAAKpB,MAAMJ,UACXwB,KAAKpB,MAAMM,WACS,KAArBc,KAAKpB,MAAMC,MACV,sBAAKqC,UAAU,eAAf,UACC,wBACA,wBACA,wBACA,2BAGD,cAAC,IAAMK,SAAP,YA6CJ,0BAAUa,GAAG,qBAAqBL,QAAS/B,KAAKb,cAAhD,SACEe,IAGF,qBAAKgB,UAAU,oBAAf,SACElB,KAAKpB,MAAMM,YACXc,KAAKpB,MAAMJ,SACwB,IAApCwB,KAAKpB,MAAME,cAAcqB,OACxB,oBAAIyB,MAAO,CAAEmB,UAAW,UAAxB,iCAGG/C,KAAKpB,MAAMM,UACd,oBAAIgC,UAAU,YAAd,SAA2BjB,IAE3B,cAAC,IAAMsB,SAAP,a,GArSeyB,IAAMC,WCaZC,E,kDAdX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDvE,MAAQ,CACTwE,YAAc,EAAKD,MAAME,MAAMC,OAAOF,aAH5B,E,qDAQd,OACI,6BAAKpD,KAAKpB,MAAMwE,kB,GAXNH,aCePM,E,kDAdd,WAAYJ,GAAQ,IAAD,8BAClB,cAAMA,IACDvE,MAAQ,CACZ4E,UAAW,EAAKL,MAAME,MAAMC,OAAOE,WAHlB,E,kGAUlB,OAAO,6BAAKxD,KAAKpB,MAAM4E,gB,GAXLR,IAAMC,WCgCXQ,E,uKAnBb,OACC,cAAC,IAAD,UACC,eAAC,IAAD,WAEC,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWvF,EAAQwF,OAAK,IACxC,cAAC,IAAD,CAAOF,KAAK,qBAAqBC,UAAWJ,EAAOK,OAAK,IACxD,cAAC,IAAD,CACCF,KAAK,wBACLC,UAAWT,EACXU,OAAK,IAGN,cAAC,IAAD,CAAUC,GAAG,e,GAdAZ,aCDHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtG,MAAK,YAAkD,IAA/CuG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c09d645.chunk.js","sourcesContent":["//import { SparqlEndpointFetcher } from \"fetch-sparql-endpoint\";\n\nexport async function fetchSearchResultsFromMesh(userEntry, onResultsFound) {\n\ttry {\n\t\tlet requestUrl = \"https://id.nlm.nih.gov/mesh/sparql?query=\";\n\t\tlet suffixUrl =\n\t\t\t\"&format=JSON&year=current&limit=50&offset=0&inference=true\";\n\t\tlet query =\n\t\t\t`PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n            PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\n\t\t    PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>\n            PREFIX owl:<http://www.w3.org/2002/07/owl#>\n            PREFIX meshv:<http://id.nlm.nih.gov/mesh/vocab#>\n            \n            SELECT ?dId ?mId ?label ?comment\n            FROM <http://id.nlm.nih.gov/mesh>\n            WHERE {\n              ?descriptor a meshv:Descriptor;\n                            meshv:identifier ?dId;\n                            rdfs:label ?label;\n                            meshv:active 1;\n                            meshv:preferredConcept ?concept.\n              ?concept meshv:identifier ?mId;\n                       meshv:scopeNote ?comment.\n              FILTER(REGEX(?label,\"` +\n\t\t\tuserEntry +\n\t\t\t`\",\"i\")).\n            }\n            ORDER BY ?dId ?mId`;\n\t\tlet encodedQuery = encodeURIComponent(query);\n\t\tfetch(requestUrl + encodedQuery + suffixUrl)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tonResultsFound(result.results.bindings, userEntry);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(\"Error : \", error);\n\t\t\t\t}\n\t\t\t);\n\t} catch (err) {\n\t\tconsole.log(\"somethin went wrong\", err);\n\t}\n}\n\nexport async function fetchSearchResultsDisease(userEntry, onResultsFound) {\n\ttry {\n\t\tlet requestUrl =\n\t\t\t\"http://dbpedia.org/sparql/?default-graph-uri=http%3A%2F%2Fdbpedia.org&query=\";\n\t\tlet suffixUrl =\n\t\t\t\"&format=application%2Fsparql-results%2Bjson&CXML_redir_for_subjs=121&CXML_redir_for_hrefs=&timeout=30000&debug=on&run=+Run+Query+\";\n\t\tlet query =\n\t\t\t` SELECT ?s as ?search ?nameFr ?nameEn ?commentFr ?commentEn ?image\n        WHERE {\n            ?s a yago:Disease114070360;\n            foaf:depiction ?image\n            FILTER regex(?s, \"` +\n\t\t\tuserEntry +\n\t\t\t`\", \"i\").\n            OPTIONAL {\n                ?s rdfs:label ?nameFr.\n                FILTER(langMatches(lang(?nameFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:label ?nameEn.\n                FILTER(langMatches(lang(?nameEn), \"en\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentFr.\n                FILTER(langMatches(lang(?commentFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentEn.\n                FILTER(langMatches(lang(?commentEn), \"en\")).\n            }\n        } LIMIT 10 `;\n\t\tfetch(requestUrl + query + suffixUrl)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tonResultsFound(result.results.bindings, userEntry);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(\"Error : \", error);\n\t\t\t\t}\n\t\t\t);\n\t} catch (err) {\n\t\tconsole.log(\"somethin went wrong\", err);\n\t}\n}\n\nexport async function fetchSearchResultsVirus(userEntry, onResultsFound) {\n\ttry {\n\t\tlet requestUrl =\n\t\t\t\"http://dbpedia.org/sparql/?default-graph-uri=http%3A%2F%2Fdbpedia.org&query=\";\n\t\tlet suffixUrl =\n\t\t\t\"&format=application%2Fsparql-results%2Bjson&CXML_redir_for_subjs=121&CXML_redir_for_hrefs=&timeout=30000&debug=on&run=+Run+Query+\";\n\t\tlet query =\n\t\t\t`\n        SELECT ?s as ?search ?nameFr ?nameEn ?commentFr ?commentEn ?image\n        WHERE {\n            ?s a yago:Virus101328702;\n            foaf:depiction ?image.\n            FILTER regex(?s, \"` +\n\t\t\tuserEntry +\n\t\t\t`\", \"i\").\n            OPTIONAL {\n                ?s rdfs:label ?nameFr.\n                FILTER(langMatches(lang(?nameFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:label ?nameEn.\n                FILTER(langMatches(lang(?nameEn), \"en\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentFr.\n                FILTER(langMatches(lang(?commentFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentEn.\n                FILTER(langMatches(lang(?commentEn), \"en\")).\n            }\n        } LIMIT 10`;\n\t\tfetch(requestUrl + query + suffixUrl)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tonResultsFound(result.results.bindings, userEntry);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(\"Error : \", error);\n\t\t\t\t}\n\t\t\t);\n\t} catch (err) {\n\t\tconsole.log(\"somethin went wrong\", err);\n\t}\n}\n\n// export async function fetchSearchResultsDiseaseAndVirus(\n//   userEntry,\n//   onResultsFound\n// ) {\n//   try {\n//     const myFetcher = new SparqlEndpointFetcher();\n//     const bindingsStream = await myFetcher.fetchBindings(\n//       \"https://dbpedia.org/sparql\",\n//       `\n//         SELECT ?s as ?search ?nameFr ?nameEn ?commentFr ?commentEn ?image\n//         WHERE {\n//             { {?s a yago:Virus101328702.}\n//             UNION\n//             {?s a dbo:Disease.} }\n//             FILTER regex(?s, \"` +\n//         userEntry +\n//         `\", \"i\").\n//             OPTIONAL {\n//                 ?s rdfs:label ?nameFr.\n//                 FILTER(langMatches(lang(?nameFr), \"fr\")).\n//             }\n//             OPTIONAL {\n//                 ?s rdfs:label ?nameEn.\n//                 FILTER(langMatches(lang(?nameEn), \"en\")).\n//             }\n//             OPTIONAL {\n//                 ?s rdfs:comment ?commentFr.\n//                 FILTER(langMatches(lang(?commentFr), \"fr\")).\n//             }\n//             OPTIONAL {\n//                 ?s rdfs:comment ?commentEn.\n//                 FILTER(langMatches(lang(?commentEn), \"en\")).\n//             }\n//             ?s foaf:depiction ?image.\n//         } LIMIT 10`\n//     );\n//     bindingsStream.on(\"data\", (bindings) => {\n//       onResultsFound(bindings,\"both\");\n//     });\n//   } catch (err) {\n//     console.log(\"somethin went wrong\", err);\n//   }\n// }\n\n/*const myFetcher = new SparqlEndpointFetcher();\n\t\tconst bindingsStream = await myFetcher.fetchBindings(ù\n\t\t\t\"https://dbpedia.org/sparql\",\n\t\t\t`\n        SELECT ?s as ?search ?nameFr ?nameEn ?commentFr ?commentEn ?image\n        WHERE {\n            ?s a yago:Disease114070360;\n            foaf:depiction ?image\n            FILTER regex(?s, \"` +\n\t\t\t\tuserEntry +\n\t\t\t\t`\", \"i\").\n            OPTIONAL {\n                ?s rdfs:label ?nameFr.\n                FILTER(langMatches(lang(?nameFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:label ?nameEn.\n                FILTER(langMatches(lang(?nameEn), \"en\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentFr.\n                FILTER(langMatches(lang(?commentFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentEn.\n                FILTER(langMatches(lang(?commentEn), \"en\")).\n            }\n        } LIMIT 10 `\n\t\t);\n\t\tbindingsStream.on(\"data\", (bindings) => {\n\t\t\tonResultsFound(bindings, \"disease\");\n    });*/\n\n/*   const myFetcher = new SparqlEndpointFetcher();\n\t\tconst bindingsStream = await myFetcher.fetchBindings(\n\t\t\t\"https://dbpedia.org/sparql\",\n\t\t\t`\n        SELECT ?s as ?search ?nameFr ?nameEn ?commentFr ?commentEn ?image\n        WHERE {\n            ?s a yago:Virus101328702;\n            foaf:depiction ?image.\n            FILTER regex(?s, \"` +\n\t\t\t\tuserEntry +\n\t\t\t\t`\", \"i\").\n            OPTIONAL {\n                ?s rdfs:label ?nameFr.\n                FILTER(langMatches(lang(?nameFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:label ?nameEn.\n                FILTER(langMatches(lang(?nameEn), \"en\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentFr.\n                FILTER(langMatches(lang(?commentFr), \"fr\")).\n            }\n            OPTIONAL {\n                ?s rdfs:comment ?commentEn.\n                FILTER(langMatches(lang(?commentEn), \"en\")).\n            }\n        } LIMIT 10`\n\t\t);\n\t\tbindingsStream.on(\"data\", (bindings) => {\n\t\t\tonResultsFound(bindings, \"virus\");\n\t\t});*/\n","export default __webpack_public_path__ + \"static/media/logo2.103b5fa1.svg\";","import React from \"react\";\nimport { fetchSearchResultsFromMesh } from \"../requests/Requests\";\nimport \"./Search.css\";\nimport logo from \"../logo2.svg\";\n\nclass Search extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tsearchResults: [], // an array where the results found are added\n\t\t\tquery: \"\", // the text typed into the search input\n\t\t\tsearching: false, // defines if the \"Rechercher\" button has been pressed once\n\t\t\ttyping: false, //defines if the input bar has focus (ie: the user is going to type)\n\t\t\tdiseaseChecked: true, //define if the checkbox disease is checked or not\n\t\t\tvirusChecked: true, //define if the checkbox virus is checked or not\n\t\t\tshowOptions: false, // define if you can see the search options\n\t\t\tloading: false, //defines if\n\t\t};\n\t}\n\n\tfetchData = (valueToSearch) => {\n\t\tthis.setState({ loading: true });\n\t\tfetchSearchResultsFromMesh(valueToSearch, this.handleResults);\n\n\t\t/*fetchData = () => {\n\t\tif (this.state.diseaseChecked && this.state.virusChecked) {\n\t\t\tfetchSearchResultsDisease(valueToSearch, this.handleResults);\n\t\t\tfetchSearchResultsVirus(valueToSearch, this.handleResults);\n\t\t} else if (this.state.diseaseChecked) {\n\t\t\tfetchSearchResultsDisease(valueToSearch, this.handleResults);\n\t\t} else if (this.state.virusChecked) {\n\t\t\tfetchSearchResultsVirus(valueToSearch, this.handleResults);\n\t\t}*/\n\t};\n\n\thandleResults = (results, queryResponded) => {\n\t\tif (queryResponded === this.state.query) {\n\t\t\tthis.setState({ loading: false });\n\t\t\t//verifying that the response corresponds to the displayed search word\n\t\t\tthis.setState({ searchResults: results });\n\t\t\t// results.map((result) => {\n\t\t\t// \tlet tmpSearchResults = this.state.searchResults;\n\t\t\t// \ttmpSearchResults.push(result);\n\t\t\t// \tthis.setState({ searchResults: tmpSearchResults });\n\t\t\t// \treturn 1;\n\t\t\t// });\n\t\t}\n\t};\n\n\thandleInputChange = () => {\n\t\tthis.setState({ query: this.search.value, searchResults: [] });\n\t\tif (this.search.value === \"\") {\n\t\t\tthis.setState({ searching: false });\n\t\t} else {\n\t\t\tthis.fetchData(this.search.value);\n\t\t}\n\t};\n\thandleKeyDown = (event) => {\n\t\tif (event.key === \"Enter\" || event.key === \"Unidentified\") {\n\t\t\tthis.setState({ searching: true });\n\t\t\tthis.search.blur();\n\t\t}\n\t};\n\n\thandleTyping(typing) {\n\t\tthis.setState({ typing });\n\t}\n\n\thandleCheckboxDisease = () => {\n\t\tlet checked = !this.state.diseaseChecked;\n\t\tthis.setState({ diseaseChecked: checked });\n\t};\n\n\thandleCheckboxVirus = () => {\n\t\tlet checked = !this.state.virusChecked;\n\t\tthis.setState({ virusChecked: checked });\n\t};\n\n\thandleTitleClick = () => {\n\t\tthis.setState({ searching: false });\n\t};\n\n\thandleOptionClick = () => {\n\t\tthis.setState({ showOptions: !this.state.showOptions });\n\t\tconsole.log(this.state.showOptions);\n\t};\n\n\trender() {\n\t\tlet resultsToPrint;\n\t\tlet resultsSuggestions;\n\t\tif (this.state.searchResults.length > 0) {\n\t\t\tlet searchResultsFiltered = this.state.searchResults.sort(\n\t\t\t\t(a, b) => {\n\t\t\t\t\tlet nameA = a.label.value.toLowerCase();\n\t\t\t\t\tlet nameB = b.label.value.toLowerCase();\n\t\t\t\t\tlet recherche = this.state.query.toLowerCase();\n\t\t\t\t\tlet indexA = nameA.indexOf(recherche);\n\t\t\t\t\tlet indexB = nameB.indexOf(recherche);\n\t\t\t\t\tif (indexA < indexB) return -1;\n\t\t\t\t\tif (indexA > indexB) return 1;\n\t\t\t\t\tif (indexA === indexB) return 0;\n\t\t\t\t}\n\t\t\t);\n\t\t\tresultsToPrint = searchResultsFiltered.map((result) => {\n\t\t\t\tlet name = result.label.value;\n\t\t\t\tlet comment = result.comment.value;\n\t\t\t\tlet subStringSize = 200;\n\t\t\t\tif (name && !this.state.loading) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"disease\" key={name}>\n\t\t\t\t\t\t\t<h2>{name.charAt(0).toUpperCase()}</h2>\n\t\t\t\t\t\t\t<h3>{name}</h3>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{comment.length >= subStringSize\n\t\t\t\t\t\t\t\t\t? comment.substring(0, subStringSize) +\n\t\t\t\t\t\t\t\t\t  \"...\"\n\t\t\t\t\t\t\t\t\t: comment}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<a href={\"/disease/\" + name}>\n\t\t\t\t\t\t\t\t<button>En savoir plus</button>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn <React.Fragment />;\n\t\t\t});\n\t\t\tif (this.state.typing && this.state.query !== \"\") {\n\t\t\t\tresultsSuggestions = searchResultsFiltered\n\t\t\t\t\t.slice(0, 10)\n\t\t\t\t\t.map((result) => {\n\t\t\t\t\t\tif (result.label) {\n\t\t\t\t\t\t\tlet nameEN = result.label.value.toLowerCase();\n\t\t\t\t\t\t\tlet recherche = this.state.query.toLowerCase();\n\t\t\t\t\t\t\tlet index = nameEN.indexOf(recherche);\n\t\t\t\t\t\t\tlet wordList;\n\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\twordList = nameEN.split(this.state.query, 2);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t// className=\"suggestion-single-result\"\n\t\t\t\t\t\t\t\t\t\tkey={nameEN}\n\t\t\t\t\t\t\t\t\t\tvalue={nameEN}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t// {wordList[0]}\n\t\t\t\t\t\t\t\t\t// <span style={{ fontWeight: 900 }}>\n\t\t\t\t\t\t\t\t\t// \t{this.state.query}\n\t\t\t\t\t\t\t\t\t// </span>\n\t\t\t\t\t\t\t\t\t// {wordList[1]}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t// className=\"suggestion-single-result\"\n\t\t\t\t\t\t\t\t\t\tkey={nameEN}\n\t\t\t\t\t\t\t\t\t\tvalue={nameEN}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tlet emptyArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\t\t\tresultsToPrint = emptyArray.map((empty) => {\n\t\t\t\treturn <li className=\"disease\" key={empty}></li>;\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"searcher-container\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tthis.state.searching\n\t\t\t\t\t\t\t? { overflow: \"scroll\" }\n\t\t\t\t\t\t\t: { maxHeight: \"100vh\", overflow: \"hidden\" }\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tthis.state.searching\n\t\t\t\t\t\t\t\t? \"search-header topbar\"\n\t\t\t\t\t\t\t\t: \"search-header\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tonClick={this.handleTitleClick}\n\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\tclassName=\"search-logo\"\n\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tthis.state.searching\n\t\t\t\t\t\t\t\t\t? \"search-text-container topbar\"\n\t\t\t\t\t\t\t\t\t: \"search-text-container\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={this.handleTitleClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h2 className=\"search-title\">\n\t\t\t\t\t\t\t\tThe <br />\n\t\t\t\t\t\t\t\tDisease\n\t\t\t\t\t\t\t\t<br /> Searcher\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<p>By the HexaOne Team</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tthis.state.searching\n\t\t\t\t\t\t\t\t\t? \"autocomplete home-search-bar topbar\"\n\t\t\t\t\t\t\t\t\t: \"autocomplete home-search-bar\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"home-search\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\t\tplaceholder=\"Rechercher une maladie. ex: coronavirus\"\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tlist=\"suggestion-results\"\n\t\t\t\t\t\t\t\tref={(input) => (this.search = input)}\n\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\tonFocus={() => this.handleTyping(true)}\n\t\t\t\t\t\t\t\tonBlur={() => this.handleTyping(true)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{this.state.loading &&\n\t\t\t\t\t\t\t!this.state.searching &&\n\t\t\t\t\t\t\tthis.state.query !== \"\" ? (\n\t\t\t\t\t\t\t\t<div className=\"lds-ellipsis\">\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<React.Fragment />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{/* <div\n\t\t\t\t\t\t\t\tclassName=\"search-options\"\n\t\t\t\t\t\t\t\tonClick={this.handleOptionClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className=\"material-icons blue\">\n\t\t\t\t\t\t\t\t\ttune\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div\n\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\tthis.state.showOptions\n\t\t\t\t\t\t\t\t\t? \"search-options-container\"\n\t\t\t\t\t\t\t\t\t: \"hidden\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<label className=\"switch\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid=\"disease\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.state.diseaseChecked}\n\t\t\t\t\t\t\t\t\tonChange={this.handleCheckboxDisease}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"slider round blue\" />\n\t\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"disease\">\n\t\t\t\t\t\t\t\t\tDisease\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label className=\"switch\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid=\"virus\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.state.virusChecked}\n\t\t\t\t\t\t\t\t\tonChange={this.handleCheckboxVirus}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"slider round green\" />\n\t\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"virus\">\n\t\t\t\t\t\t\t\t\tVirus\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<datalist id=\"suggestion-results\" onClick={this.handleKeyDown}>\n\t\t\t\t\t{resultsSuggestions}\n\t\t\t\t</datalist>\n\n\t\t\t\t<div className=\"results-container\">\n\t\t\t\t\t{this.state.searching &&\n\t\t\t\t\t!this.state.loading &&\n\t\t\t\t\tthis.state.searchResults.length === 0 ? (\n\t\t\t\t\t\t<h2 style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t\tPas de résultats\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t) : this.state.searching ? (\n\t\t\t\t\t\t<ul className=\"tilesWrap\">{resultsToPrint}</ul>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<React.Fragment />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Search;\n","import React,{Component} from 'react';\n\nclass Disease extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            diseaseName : this.props.match.params.diseaseName,\n        }\n    }\n\n    render(){\n        return(\n            <h1>{this.state.diseaseName}</h1>\n        );\n    }\n}\n\nexport default Disease;","import React from \"react\";\n\nclass Virus extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvirusName: this.props.match.params.virusName,\n\t\t};\n\t}\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn <h1>{this.state.virusName}</h1>;\n\t}\n}\n\nexport default Virus;\n","import React, { Component } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tRedirect,\n\tSwitch,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Search from \"./Search/Search\";\nimport Disease from \"./Disease/Disease\";\nimport Virus from \"./Virus/Virus\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t{/* Front Pages */}\n\t\t\t\t\t<Route path=\"/\" component={Search} exact />\n\t\t\t\t\t<Route path=\"/virus/:virusName?\" component={Virus} exact />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/disease/:diseaseName\"\n\t\t\t\t\t\tcomponent={Disease}\n\t\t\t\t\t\texact\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}